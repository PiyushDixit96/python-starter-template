# NOTE common configuration for testing and development
#
#   - Some configuration here is testing specific, but changing *all* environment variables
#     to test mode is a pain, so we include them here for devprod purposes.

# required when running pytest, python, etc; not required when running fastapi and ipython
export PYTHONPATH=.

export PYTHON_SERVER_PORT=8200
export PYTHON_TEST_SERVER_PORT=8201
export PYTHON_TEST_SERVER_HOST=api-test.localhost

# output directory is used by CI and justfiles
export PLAYWRIGHT_RESULT_DIRECTORY=tmp/playwright
export PYTEST_ADDOPTS="--output $PLAYWRIGHT_RESULT_DIRECTORY"

# used for py tests and justfile recipes
export OPENAPI_JSON_PATH=$PWD/web/openapi.json

# only applicable in development, javascript is bundled in the py container in prod
export JAVASCRIPT_SERVER_PORT=8202

export JAVASCRIPT_SERVER_HOST=web.localhost

# protocol is important, otherwise you'll get access control errors in browser
export VITE_PYTHON_URL="https://api.localhost/"

export EMAIL_FROM_ADDRESS="noreply@example.com"

# set these conditionally so they be overwritten by CI, which has a different server configuration
if [ -z "$DATABASE_HOST" ] && [ -z "$REDIS_HOST" ]; then
  SERVICES_HOST=python-starter-template.orb.local
  REDIS_HOST=redis.${SERVICES_HOST}
  DATABASE_HOST=postgres.${SERVICES_HOST}
  SMTP_HOST=mailpit.${SERVICES_HOST}
else
  DATABASE_HOST="localhost"
  REDIS_HOST="localhost"
  SMTP_HOST="localhost"
fi

# names are important here: pg_isready and docker configuration requires these
export POSTGRES_USER=root
export POSTGRES_PASSWORD=password
export POSTGRES_DB=development

export REDIS_URL=redis://${REDIS_HOST}:6379/1
export DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}:5432/development
export SMTP_URL=smtp://${SMTP_HOST}:1025

#######################
# Secrets
#######################

# NOTE OP_ACCOUNT and OP_VAULT_UID are *not* required when using a service account to access, which is what is used on CI

# specify the 1p account that should be used to source secrets via `op read`
# export OP_ACCOUNT=yourdomain.1password.com

# right click on the vault with your secrets and copy the UID
export OP_VAULT_UID=g46wit25zdsr2ul7yivj4air2u

# NOTE OP references with names can change over time and introduce mutation risk

export CLERK_PRIVATE_KEY=$(op read "op://${OP_VAULT_UID}/epctgojloj7legp7h62zktshha/sandbox-clerk-secret-key")
export OPENAI_API_KEY=$(op read "op://${OP_VAULT_UID}/3kilfl4b5gegds7anifvali6zu/credential")
export SENTRY_DSN=$(op read "op://${OP_VAULT_UID}/4dsjcmjzybuipafki2wl2eovsy/backend-dsn")

export VITE_SENTRY_DSN=$(op read "op://${OP_VAULT_UID}/4dsjcmjzybuipafki2wl2eovsy/frontend-dsn")
export VITE_CLERK_PUBLIC_KEY=$(op read "op://${OP_VAULT_UID}/epctgojloj7legp7h62zktshha/sandbox-clerk-public-key")
export CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLIC_KEY}
export VITE_POSTHOG_KEY=$(op read "op://${OP_VAULT_UID}/25dj3ith4d37cy5ghssr3mo5rq/public-key")
export VITE_POSTHOG_HOST=$(op read "op://${OP_VAULT_UID}/25dj3ith4d37cy5ghssr3mo5rq/posthog-host")
