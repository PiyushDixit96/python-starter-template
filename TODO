## python
https://github.com/FactoryBoy/factory_boy - testing fixtures
https://pypi.org/project/fastapi-structlog/ - structured logging for fastapi
https://github.com/astral-sh/ruff/issues/6514 - float to top DNE
celery types
https://github.com/0xthiagomartins/sqlmodel-controller/blob/main/.coveragerc - automatic coverage
timeout issue https://github.com/celery/celery/issues/3430 and https://github.com/celery/celery/discussions/8692
maybe use griptape? do they have an llm cache?
flower job management, serve through fastapi / uvicorn
understand this https://wiki.postgresql.org/wiki/Don%27t_Do_This#Don.27t_use_upper_case_table_or_column_names
ruff doesn't do everything that pylint does, but it's trying! https://github.com/astral-sh/ruff/issues/970
breakpoint() is not protected against by push? is this coming in ruff?
use BaseSettings in pydantic instead of decouple?
fastapi websocket with remix connection
do we need this https://github.com/fastapiutils/fastapi-utils/blob/master/fastapi_utils/guid_type.py?
logging can sometimes get a little crazy, we should come up with better defaults for child loggers
gzip serve files, cache static assets as gzip; got to be someone who has done this before
custom py reload, this is taking a ton of resources https://github.com/fastapi/fastapi/discussions/2863
TypeID `.get` doesn't work with an ID string
understand typeid string vs DB UID and how it's handled internally
favicon and other root handlers on the fastapi server
prevent rich tracebacks
expanded sort categories, can we do this with ruff?
fix html formatting, use a single formatter type
https://gist.github.com/nymous/f138c7f06062b7c43c060bf03759c29e structured logging for fastapi
pull commands structure over
https://salabim.org/peek/#copying-to-the-clipboard
super user pattern in clerk https://discord.com/channels/856971667393609759/1330543476433227877
https://github.com/mher/flower/pull/1417 - flower can't retry jobs?!
https://clerk.com/docs/users/user-impersonation - impersonation flow

## js
https://github.com/raineorshine/npm-check-updates/issues/1366 - exact versions not respected
https://github.com/shadcn-ui/ui/issues/5669 - can't use `    "verbatimModuleSyntax": true,`
https://github.com/vantezzen/autoform - looks like an interesting way to autogenerate schema
https://github.com/ferdikoomen/openapi-typescript-codegen/issues/1252#issuecomment-2593462128 - no camel case transformation on heyapi
https://github.com/hey-api/openapi-ts/issues/1571 - naming issues
https://github.com/remix-run/react-router/discussions/12427 - all clientLoaders are rerun, including allk ested layouts
https://discord.com/channels/770287896669978684/1326588296025083944 - vite html transformation plugin https://github.com/remix-run/react-router/issues/12736
https://github.com/josh-hemphill/vite-plugin-favicon - favicon generator
https://github.com/hey-api/openapi-ts/commit/b3c23ba99c361bdca3ab9c44017b6e5c044f40a7 use this for bearer auth https://github.com/hey-api/openapi-ts/releases/tag/%40hey-api%2Fclient-fetch%400.6.0
just py_js-build --watch implementation
typed routes https://github.com/fenok/react-router-typesafe-routes
sentry config, not yet ready for v7 https://docs.sentry.io/platforms/javascript/guides/react/features/react-router/, https://github.com/remix-run/react-router/discussions/12423
posthog config, fix when v7 is released
add posthog usage example
logging config fine on the client side?
add middleware to client to catch authorization errors, create non-clerk-provider layout on the frontend
think through authenticated pattern, create a clientLoader action
fix clerk redirect issue https://discord.com/channels/856971667393609759/1311386772520960182
https://github.com/hey-api/openapi-ts/pull/1378 - better log redirect, but need to handle ci and local builds
better error page, esp when 40x error when loading the client
https://simondosda.github.io/posts/2021-05-10-eslint-imports.html auto fix unused imports
js test build should not include valid sentry token, can we use a console DSN?

## deployment
grafana timing integration
https://grafana.com for observability
  log ingestion service, need to investigate
can kamal work with a registry with container?
flightcontrol on AWS or something like that on azure

## dev
forklift for s3 and remote storage
%load_ext pgcli.magic for ipython
add custom cspell dictionary instead of settings.json
https://github.com/TablePlus/TablePlus/issues/3407 orb stack connections sometimes break
extract playground logic into ipython extension
extract toggle logic into pypi package
fastapi dev conflicts with pdbr interactions, should allow fastapi logs to be funneled elsewhere; maybe we can detect breakpoint usage and do this automatically
should we use sops? Probably can just use 1p, think about mutation risks here https://github.com/getsops/sops?tab=readme-ov-file#yaml-json-env-and-ini-type-extensions
`uv pip install --config-setting editable_mode=compat --reinstall -e ./pypi/activemodel` and https://github.com/astral-sh/uv/issues/7028 and https://github.com/dagster-io/dagster/commit/9b3bf2dda8a44168326bb38f75bdd47493ee6da7#diff-85c2bb6d4721ed0a146ea51e2bd615dbdf2249ad3714adc1cacc1877707cadeeR161
https://github.com/astral-sh/uv/issues/9258#issuecomment-2488597047 - looks like local dev dependencies are supported?
autogen'd localalias based on ENV port config, use local
switch to binstall and see if this becomes a binary distribution https://github.com/yukihirop/ultraman/issues/58
look into devenv, maybe a replacement for some of the setup here? https://github.com/getsentry/sentry/blob/master/devenv/sync.py
only look at local .tool-versions instead of the entire system
mermaid postgres integrated into readme https://github.com/bastiensun/pg-mermaid
add some mermaid diagrams to the readme https://raw.githubusercontent.com/devrishik/medical-record-copilot/bc450aa523ba65e3b5a254f422696725512f8c30/README.md

## css
tailwind sorting

## commitlint
removing unused import, should catch this specifically

## production
should we add justfile to run production scripts? Probably not. Should document.
`{"TimeStamp": "2024-12-17T22:05:33.8744132+00:00", "Log": "INFO   100.100.0.180:49730 - \"GET /favicon.ico HTTP/1.1\" 200"}` need to improve fastapi structured logging

## template
https://github.com/fastapi/full-stack-fastapi-template/blob/master/copier.yml - looks like there is some copy tool I can use? to make this template easy to copy.

## pytest
timeout default for playwright to avoid hanging
test logs are a mess. I need to figure out what pytest is doing and make them sane.
--debug seems to generate a different test log
https://github.com/darrenburns/pytest-clarity

## aiautocommit
include multiple large changes with comma
if I remove stuff, it counts it as a feature

## open source
localias upstream no caching

## ui
dialog ovefflow not working https://github.com/shadcn-ui/ui/issues/16

## ci
cache py dependencies https://github.com/astral-sh/setup-uv/blob/d837751086f305827240e5292bdf208a757ceef1/src/utils/inputs.ts#L59
https://graphite.dev/guides/github-actions-caching - cache docker build and postgres images? https://lipanski.com/posts/speed-up-your-docker-builds-with-cache-from
https://github.com/tecolicom/actions-use-apt-tools/issues/5
1p can hang CI https://1password-devs.slack.com/archives/C03NJV34SSC/p1733764637441309
can we use a op service account locally? Probably not a great idea since no 2f is required
pull mailpit contents (we can't pull screeshots)
visual diff via comment on playwright
distribute tests across databases and redis https://pytest-xdist.readthedocs.io/en/stable/distribution.html
enable verbose debugging on tests when GHA debug is enabled
maybe screenshot comments? https://github.com/ActivityWatch/aw-webui/blob/291da6f2c5e7a6b896f23a4eec5ffed9874321ba/.github/workflows/comment.yml#L69
add console logs to log `page.on("console", lambda msg: print(f"Console Message: {msg.type()}: {msg.text()}"))`


downside with this action is it requires write access to the repo and manages a separate branch. instead we should just add a coverage failure threshold.
```
      # TODO coverage data is not outputting properly right now
      # - name: Add Coverage Comment to PR
      #   id: coverage_comment
      #   uses: py-cov-action/python-coverage-comment-action@v3
      #   with:
      #     GITHUB_TOKEN: ${{ github.token }}
```

https://github.com/tecolicom/actions-use-apt-tools/issues/4 - `sudo apt-get update` does work.

maybe use a different event loop? Faster / less issues with playwright?

```
# TODO this doesn't seem to fix the issue
# https://github.com/microsoft/playwright-pytest/issues/167#issuecomment-1546854047
# def pytest_configure():
#     log.info("pytest_configure: nesting asyncio loop")
#     nest_asyncio.apply()

# TODO we should look into uvloop if we end up doing async tests
# @pytest.fixture(scope="session")
# def event_loop_policy():
#     return uvloop.EventLoopPolicy()
```

## build
add nixpacks cache, waiting on comment from author about how to do this.
push to registry
--cache-from to speed up builds

## act compat
https://github.com/catthehacker/docker_images/issues/138 - apt tool, still failing on apt-install but not because of missing packages
act --container-architecture linux/amd64 --job web
act --container-architecture linux/amd64 --env OP_SERVICE_ACCOUNT_TOKEN="$OP_SERVICE_ACCOUNT_TOKEN"

## vs code
file picker search for specific files even though they are in gitignore
https://marketplace.visualstudio.com/items?itemName=lolacod.exclude-format-on-save ignore ui components
binding for paste as plain text
```
{
    "key": "ctrl+shift+v",
    "command": "editor.action.pasteAs",
    "args": {
        "preferences": [
            "text.plain"
        ]
    }
}
```
