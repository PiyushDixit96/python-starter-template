name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request: {}

# TODO need to understand what is going on here more
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  # TODO consider adding a hard timeout for the tail cases
  # timeout-minutes: 10

  web:
    name: Python Web Application
    # TODO why can't we define runs-on this for the entire workflow?
    runs-on: ubuntu-latest
    # https://stackoverflow.com/questions/71679568/github-actions-ignore-or-exclude-dependabot-pull-requests
    # if: ${{ github.triggering_actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - run: just py_setup
      - run: just py_lint
      # - uses: ./.github/actions/python-setup

  app:
    name: Python Web Application
    # TODO why can't we define runs-on this for the entire workflow?
    runs-on: ubuntu-latest
    # https://stackoverflow.com/questions/71679568/github-actions-ignore-or-exclude-dependabot-pull-requests
    # if: ${{ github.triggering_actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - run: just js_setup
      - run: just js_lint

  # typecheck:
  #   name: pyright
  #   runs-on: ubuntu-latest
  #   if: ${{ github.triggering_actor != 'dependabot[bot]' }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/python-setup

  #     - name: 🔎 Type check
  #       run: poetry run npx pyright

  # pytest:
  #   name: Pytest
  #   runs-on: ubuntu-latest
  #   if: ${{ github.triggering_actor != 'dependabot[bot]' }}
  #   services:
  #     redis:
  #       image: redis
  #       options: >-
  #         --health-cmd "redis-cli ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         # Maps port 6379 on service container to the host
  #         - 6379:6379
  #     postgres:
  #       image: postgres
  #       ports:
  #         - 5432:5432
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/python-setup
  #     - run: DATABASE_URL=$TEST_DATABASE_URL poetry run npx prisma migrate reset --force

  #     - name: ⚡ Run Pytest
  #       run: poetry run pytest

  # deploy:
  #   name: 🚀 Deploy
  #   runs-on: ubuntu-latest
  #   # needs: [lint, typecheck, vitest, depcheck]
  #   needs: [formatting, typecheck]
  #   # only build/deploy main branch on pushes
  #   if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.11.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: 👀 Read app name
  #       uses: SebRollen/toml-action@v1.0.2
  #       id: app_name
  #       with:
  #         file: "python.toml"
  #         field: "app"

  #     # TODO add staging deploy in the future if on dev branch
  #     - name: 🚀 Deploy Production
  #       if: ${{ github.ref == 'refs/heads/main' }}
  #       uses: superfly/flyctl-actions@1.3
  #       with:
  #         args: "deploy --config python.toml"
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
