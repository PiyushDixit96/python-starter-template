{
  // css
  "tailwind-raw-reorder.tailwindConfigPath": "./web/tailwind.config.ts",

  // typescript / web projects
  "typescript.tsdk": "web/node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  // TODO is this picking the exact right typescript version from the repo?
  "typescript.preferGoToSourceDefinition": true,
  "typescript.experimental.updateImportsOnPaste": true,

  // TODO unsure if this really works: https://stackoverflow.com/questions/53113031/how-to-see-a-fully-expanded-typescript-type-without-n-more-and
  "typescript.experimental.expandableHover": true,

  "prettier.prettierPath": "web/node_modules/prettier",
  "[typescript][typescriptreact][javascript][javascriptreact]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "[python]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit",
      "source.organizeImports": "explicit"
    },
    "editor.tabSize": 4
  },
  // don't remove unused imports on save, this can be done later
  "ruff.lint.args": ["--ignore=F401"],

  "[toml]": {
    "editor.formatOnSave": true,
    "editor.tabSize": 4
  },
  "python.analysis.autoFormatStrings": true,

  // for import autosuggest
  "python.analysis.indexing": true,
  "python.analysis.autoImportCompletions": true,

  // TODO I had issues with develop = True imports, but it was fixed :/
  // "python.analysis.extraPaths": [
  //   "~/Projects/python"
  // ],

  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.packageIndexDepths": [
    {
      "name": "",
      "depth": 5,
      "includeAllSymbols": true
    }
    // TODO packages are not being indexed, can't find fastapi symbols in the symbol search but can in the import analysis...
    // {
    //   "name": "fastapi",
    //   "depth": 3,
    //   "includeAllSymbols": true
    // }

    //   {"name":"pdf2image", "depth":3, "includeAllSymbols": true},
    // {"name":"decouple", "depth":3, "includeAllSymbols": true},
  ],

  "cSpell.words": [
    "posthog",
    "sqlmodel",
    "sqlalchemy",
    "sqltypes",
    "openai",
    "httpx",
    "structlog",
    "orjson",
    "fastapi",
    "Procfile",
    "direnv",
    "openapi",
    "isbot",
    "loglevel",
    "typesync",
    "tailwindcss",
    "typecheck",
    "typegen",
    "aiautocommit",
    "uvicorn",
    "commitlint",
    "lefthook",
    "healthcheck",
    "redoc",
    "localias",
    "vite",
    "activemodel",
    "nixpacks",
    "pytest",
    "pyright",
    "justfile",
    "entr",
    "djlint",
    "outputjson",
    "autoflake",
    "deptry",
    "pyproject",
    "venv",
    "depcheck",
    "aclient",
    "autouse",
    "ASGITransport"
  ],
  "cSpell.enabledFileTypes": { "jinja-html": true },

  // in web, prettier is used by default, but we want it to be used outside that directly
  "[json][jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },

  "files.associations": {
    // Procfile's don't have a default file association, but are essentially yaml files
    "Procfile*": "yaml",
    ".tool-versions": "shellscript",
    ".env*": "shellscript",
    "TODO*": "markdown",
    "app/templates/**/*.md": "jinja-md",
    "app/templates/**/*.html": "jinja-html"
  },

  "files.exclude": {
    "web/node_modules": true,
    ".ruff_cache": true,
    ".pytest_cache": true,
    ".venv": true,
    "!pypi/**/*.py": false,
    // TODO I don't think this works
    "*env*": false
  },
  "search.exclude": {
    "pypi/**/*.py": false
  },

  "[justfile]": {
    "editor.insertSpaces": false,
    //   "editor.detectIndentation": false,
    "editor.tabSize": 2,
    "editor.trimAutoWhitespace": true,
    // "editor.defaultFormatter": "nefrob.vscode-just-syntax",
    "editor.formatOnSave": true
  }
}
